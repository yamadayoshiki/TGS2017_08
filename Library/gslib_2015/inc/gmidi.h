/******************************************************************************
* File Name : gmidi.h                              Ver : 1.00  Date : 98-10-22
*
* Description :
*
*       ゲームシステム用 ＭＩＤＩデータ管理 ヘッダファイル．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef		_GMIDI_H_
#define		_GMIDI_H_

#include	"type.h"

/****** データ型宣言 *********************************************************/

typedef	void*	GMIDI;				/* ＭＩＤＩハンドラ             */

/*---- 再生タイプフラグ -----------------------------------------------------*/

typedef	enum
{
	GMIDI_DEFAULT = 0,				/* デフォルト                   */
	GMIDI_LOOP    = 1				/* ループ再生                   */

} GMIDIFLAG;

/****** 関数プロトタイプ宣言 *************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : ＭＩＤＩの生成．
*
* Return  : ＭＩＤＩハンドラを返す．
*
*============================================================================*/
GMIDI
GMidiNew
(
	const char*		fname,			/* ＭＤＳファイル名             */
	GMIDIFLAG		flag			/* 再生タイプフラグ             */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩの消滅．
*
* Return  : なし．
*
*============================================================================*/
void
GMidiDelete
(
	GMIDI			hnd				/* ＭＩＤＩハンドラ             */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩの再生．
*
* Return  : 再生に成功すれば真，失敗すれば偽を返す．
*
*============================================================================*/
BOOL
GMidiPlay
(
	GMIDI			hnd				/* ＭＩＤＩハンドラ             */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩの停止．
*
* Return  : 停止に成功すれば真，失敗すれば偽を返す．
*
*============================================================================*/
BOOL
GMidiStop
(
	GMIDI			hnd				/* ＭＩＤＩハンドラ             */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩの一時停止．
*
* Return  : 一時停止に成功すれば真，失敗すれば偽を返す．
*
*============================================================================*/
BOOL
GMidiPause
(
	GMIDI			hnd				/* ＭＩＤＩハンドラ             */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩの一時停止状態からの再開．
*
* Return  : 成功すれば真，失敗すれば偽を返す．
*
*============================================================================*/
BOOL
GMidiRestart
(
	GMIDI			hnd				/* ＭＩＤＩハンドラ             */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩが再生中か調べる．
*
* Return  : 再生中であれば真，停止中であれば偽を返す．
*
*============================================================================*/
BOOL
GMidiIsPlay
(
	GMIDI			hnd				/* ＭＩＤＩハンドラ             */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩが一時停止中か調べる．
*
* Return  : 一時停止中であれば真，再生中であれば偽を返す．
*
*============================================================================*/
BOOL
GMidiIsPause
(
	GMIDI			hnd				/* ＭＩＤＩハンドラ             */
);

#ifdef __cplusplus
}
#endif

#endif

/********** End of File ******************************************************/
