/******************************************************************************
* File Name : ginput.h                             Ver : 1.00  Date : 98-10-22
*
* Description :
*
*       ゲームシステム用 入力デバイス管理ヘッダファイル．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef		_GINPUT_H_
#define		_GINPUT_H_

#include	"gjoyinp.h"
#include	"gkeyinp.h"
#include	"gmouse.h"

/****** データ型宣言 *********************************************************/

typedef	void*	GINPUT;				/* 入力デバイスハンドラ   */

/****** 関数プロトタイプ宣言 *************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : 入力デバイスハンドラの生成．
*
* Return  : 入力デバイスハンドラを返す．
*
*============================================================================*/
GINPUT
GInputNew
(
	HINSTANCE			hinst,		/* インスタンスハンドラ     */
	HWND				hwnd		/* ウィンドウハンドラ       */
);

/*=============================================================================
*
* Purpose : 入力デバイスハンドラの消滅．
*
* Return  : なし．
*
*============================================================================*/
void
GInputDelete
(
	GINPUT				hnd			/* 入力デバイスハンドラ    */
);

/*=============================================================================
*
* Purpose : 入力デバイスの状態の読み込み．
*
* Return  : なし．
*
*============================================================================*/
void
GInputReadDevice
(
	GINPUT				hnd			/* 入力デバイスハンドラ    */
);

/*=============================================================================
*
* Purpose : キーボードハンドラの取得．
*
* Return  : キーボードハンドラを返す．
*
*============================================================================*/
GKEYINP
GInputGetKeyborad
(
	GINPUT				hnd			/* 入力デバイスハンドラ    */
);

/*=============================================================================
*
* Purpose : ジョイスティックハンドラの取得．
*
* Return  : ジョイスティックハンドラを返す．
*
*============================================================================*/
GJOYINP
GInputGetJoystick
(
	GINPUT				hnd			/* 入力デバイスハンドラ    */
);

/*=============================================================================
*
* Purpose : マウスハンドラの取得．
*
* Return  : なし．
*
*============================================================================*/
GMOUSE
GInputGetMouse
(
	GINPUT				hnd			/* 入力デバイスハンドラ    */
);

/*=============================================================================
*
* Purpose : 入力デバイスがアクティブになった時の処理．
*
* Return  : なし．
*
*============================================================================*/
void
GInputActivateApp
(
	GINPUT				hnd,		/* 入力デバイスハンドラ     */
	BOOL				active		/* アクティブフラグ         */
);

#ifdef __cplusplus
}
#endif

/****** ライブラリ設定 ********************************************************/

#pragma comment( lib, "dinput8.lib"  )
#pragma comment( lib, "dxguid.lib"  )

#endif

/********** End of File ******************************************************/
