/******************************************************************************
* File Name : GStexture.h                         Ver : 1.00  Date : 2002-08-13
*
* Description :
*
*       テクスチャ管理 ヘッダファイル．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef		_GSTEXTURE_H_
#define		_GSTEXTURE_H_

#include	"GStype.h"
#include	"GSpixel_format.h"

/****** データ型宣言 *********************************************************/

/*----- テクスチャ構造体 ----------------------------------------------------*/

typedef struct
{
	GSuint			Type;
	GSuint			dwTexName;
	GSuint			dwWidth;
	GSuint			dwHeight;
	GSuint			dwDepth;
	GSint			Mipmap;
	GSpixelFormat	Format;
} GStexture;

/****** 関数プロトタイプ宣言 *************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : テクスチャの生成．
*
* Return  : テクスチャを返す．
*
*============================================================================*/
extern GStexture*
gsTextureNew
(
	GLenum					type,			// テクスチャタイプ
	GLsizei					width,			// 幅
	GLsizei					height,			// 高さ
	GLsizei					depth,			// 深さ
	GLint					mipmap,			// ミップマップ
	const GSpixelFormat*	format,			// ピクセルフォーマット
	const GLvoid*			pImage			// イメージデータ
);

/*=============================================================================
*
* Purpose : テクスチャの消滅．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsTextureDelete
(
	GStexture*		pTexture			/* テクスチャ 			*/
);

/*=============================================================================
*
* Purpose : ミップマップの生成．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsTextureGenerateMipmap
(
	GStexture*		pTexture			/* テクスチャ 			*/
);

/*=============================================================================
*
* Purpose : テクスチャの幅の取得．
*
* Return  : なし．
*
*============================================================================*/
extern GSuint
gsTextureGetWidth
(
	GStexture*		pTexture			/* テクスチャ 				*/
);

/*=============================================================================
*
* Purpose : テクスチャの高さの取得．
*
* Return  : なし．
*
*============================================================================*/
extern GSuint
gsTextureGetHeight
(
	GStexture*		pTexture			/* テクスチャ 				*/
);

/*=============================================================================
*
* Purpose : テクスチャの深さの取得．
*
* Return  : なし．
*
*============================================================================*/
extern GSuint
gsTextureGetDepth
(
	GStexture*		pTexture			/* テクスチャ 				*/
);

/*=============================================================================
*
* Purpose : テクスチャ名のバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsTextureBind
(
	GStexture*		pTexture			/* テクスチャ 				*/
);

/*=============================================================================
*
* Purpose : テクスチャ名のアンバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsTextureUnbind
(
	GStexture*		pTexture			/* テクスチャ 				*/
);

/*=============================================================================
*
* Purpose : テクスチャイメージの取得．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsTextureGetImage
(
	GStexture*		pTexture,			/* テクスチャ 				*/
	GSuint*			pSize,				/*-> イメージサイズ         */
	GSvoid**		ppImage				/*-> イメージデータ         */
);

#ifdef __cplusplus
}
#endif

#endif

/********** End of File ******************************************************/
