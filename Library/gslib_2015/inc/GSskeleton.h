/******************************************************************************
* File Name : GSskeleto.h                        Ver : 1.00  Date : 2002-08-03
*
* Description :
*
*		スケルトン情報管理 ヘッダファイル．．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef		_GSSKELETON_H_
#define		_GSSKELETON_H_

#include	"GStype.h"
#include	"GSmatrix4.h"

/****** 定数宣言 *************************************************************/

#define	GS_BONE_MAX	256					/* ボーンデータの最大数		*/

/****** データ型宣言 *********************************************************/

/*----- ボーン情報構造体 ----------------------------------------------------*/

typedef	struct GSbone					/* ボーン情報構造体			*/
{
	GSuint			BoneID;				/* ボーンＩＤ				*/
	GSuint			ParentBoneID;		/* 親ボーンＩＤ				*/
	GSvector3		ParentBoneOffset;	/* 親ボーンからの相対座標	*/
	GSmatrix4		matBoneOffset;		/* ローカル座標変換行列		*/
	struct GSbone*	pParent;			/* 親ボーンへのポインタ		*/
	struct GSbone*	pSibling;			/* 兄弟ボーンへのポインタ	*/
	struct GSbone*	pChild;				/* 子ボーンへのポインタ		*/

} GSbone;

/*----- スケルトン情報構造体 ------------------------------------------------*/

typedef	struct GSskeleton				/* スケルトン情報構造体		*/
{
	GSuint			numBones;			/* ボーンの数				*/
	GSbone*			pBones;				/* ボーン配列				*/

} GSskeleton;

/****** 関数プロトタイプ宣言 *************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : スケルトンの情報の生成．
*
* Return  : スケルトン情報を返す．
*
*============================================================================*/
extern GSskeleton*
gsSkeletonNew
(
	void
);

/*=============================================================================
*
* Purpose : スケルトン情報の消滅．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsSkeletonDelete
(
	GSskeleton*		pSkeleton			/* スケルトン情報 			*/
);

/*=============================================================================
*
* Purpose : スケルトン情報のクリーンアップ．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsSkeletonCleanUp
(
	GSskeleton*		pSkeleton			/* スケルトン情報 			*/
);

/*=============================================================================
*
* Purpose : スケルトン情報ファイルの読み込み．
*
* Return  : 読み込みに成功すれば真，失敗すれば偽を返す．
*
*============================================================================*/
extern GSboolean
gsSkeletonLoadFile
(
	GSskeleton*			pSkeleton,		/* スケルトン情報 			*/
	const char*			pszFileName		/* スケルトンファイル名		*/
);

/*=============================================================================
*
* Purpose : 姿勢変換行列を求める．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsSkeletonCalculateOrientation
(
	GSskeleton*			pSkeleton,		/* スケルトン情報 				*/
	GSmatrix4*			pOutMatrices,	/*-> 計算後の姿勢変換行列配列	*/
	const GSmatrix4*	pParentMatrix,	/* 親の変換行列					*/
	const GSmatrix4*	pAnimMatrix		/* アニメーション用行列配列		*/
);

/*=============================================================================
*
* Purpose : 座標変換行列の計算を行う．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsSkeletonCalculateTransform
(
	GSskeleton*			pSkeleton,		/* スケルトン情報 			*/
	GSmatrix4*			pOutMatrices,	/*-> 座標変換行列配列		*/
	const GSmatrix4*	pOrientMatrices	/* 姿勢変換行列配列			*/
);

/*=============================================================================
*
* Purpose : ボーンデータ数を取得．
*
* Return  : ボーンデータ数を返す．
*
*============================================================================*/
extern GSuint
gsSkeletonGetNumBones
(
	GSskeleton*			pSkeleton		/* スケルトン情報 			*/
);

#ifdef __cplusplus
}
#endif

#endif

/********** End of File ******************************************************/
