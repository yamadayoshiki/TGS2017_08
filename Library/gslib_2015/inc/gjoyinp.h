/******************************************************************************
* File Name : gjoyinp.h                            Ver : 1.00  Date : 98-10-22
*
* Description :
*
*       ゲームシステム用 ジョイスティック入力 ヘッダファイル．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef		_GJOYINP_H_
#define		_GJOYINP_H_

#include	"type.h"

/****** 定数宣言 *************************************************************/

#define	GJOYSTICK_MAX		8		/* 最大ジョイスティック数       */
#define	GJOY_BUTTON_MAX		10		/* 最大ジョイスティックボタン数 */

/****** データ型宣言 *********************************************************/

typedef	void*		GJOYINP;		/* ジョイスティックハンドラ */

/*----- ジョイスティック入力情報 --------------------------------------------*/

typedef	enum
{
	GJOY_LEFT 		=	0x8000U,	/* ジョイスティック軸左         */
	GJOY_RIGHT		=	0x4000U,	/* ジョイスティック軸右         */
	GJOY_UP			=	0x2000U,	/* ジョイスティック軸上         */
	GJOY_DOWN		=	0x1000U,	/* ジョイスティック軸下         */
	GJOY_BUTTON_1	=	0x0001U,	/* ジョイスティックボタン1      */
	GJOY_BUTTON_2	=	0x0002U,	/* ジョイスティックボタン2      */
	GJOY_BUTTON_3	=	0x0004U,	/* ジョイスティックボタン3      */
	GJOY_BUTTON_4	=	0x0008U,	/* ジョイスティックボタン4      */
	GJOY_BUTTON_5	=	0x0010U,	/* ジョイスティックボタン5      */
	GJOY_BUTTON_6	=	0x0020U,	/* ジョイスティックボタン6      */
	GJOY_BUTTON_7	=	0x0040U,	/* ジョイスティックボタン7      */
	GJOY_BUTTON_8	=	0x0080U,	/* ジョイスティックボタン8      */
	GJOY_BUTTON_9	=	0x0100U,	/* ジョイスティックボタン9      */
	GJOY_BUTTON_10	=	0x0200U		/* ジョイスティックボタン10     */

} GJOYSTATE;

/****** 関数プロトタイプ宣言 *************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : ジョイスティックの生成．
*
* Return  : ジョイスティックハンドラを返す．
*
*============================================================================*/
GJOYINP
GJoyInpNew
(
	HINSTANCE			hinst,		/* インスタンスハンドラ         */
	HWND				hwnd		/* ウィンドウハンドラ           */
);

/*=============================================================================
*
* Purpose : ジョイスティックの消滅．
*
* Return  : なし．
*
*============================================================================*/
void
GJoyInpDelete
(
	GJOYINP				hnd			/* ジョイスティックハンドラ     */
);

/*=============================================================================
*
* Purpose : ジョイスティックの読み込み．
*
* Return  : なし．
*
*============================================================================*/
void
GJoyInpReadDevice
(
	GJOYINP				hnd			/* ジョイスティックハンドラ     */
);

/*=============================================================================
*
* Purpose : ジョイスティックの入力状態を調べる．
*
* Return  : 押されていれば真，押されていなければ偽を返す．
*
*============================================================================*/
BOOL
GJoyInpGetState
(
	GJOYINP				hnd,		/* ジョイスティックハンドラ     */
	int					joy_no,		/* ジョイスティックナンバ       */
	GJOYSTATE			state		/* 調べたいジョイステックの状態 */
);

/*=============================================================================
*
* Purpose : ジョイスティックが押されたか調べる．
*
* Return  : 押されたら真，押されなければ偽を返す．
*
*============================================================================*/
BOOL
GJoyInpGetTrigger
(
	GJOYINP				hnd,		/* ジョイスティックハンドラ     */
	int					joy_no,		/* ジョイスティックナンバ       */
	GJOYSTATE			state		/* 調べたいジョイステックの状態 */
);

/*=============================================================================
*
* Purpose : ジョイスティックが離されたか調べる．
*
* Return  : 離されたら真，離されなければ偽を返す．
*
*============================================================================*/
BOOL
GJoyInpGetDetach
(
	GJOYINP				hnd,		/* ジョイスティックハンドラ     */
	int					joy_no,		/* ジョイスティックナンバ       */
	GJOYSTATE			state		/* 調べたいジョイステックの状態 */
);

/*=============================================================================
*
* Purpose : ジョイスティックの軸の状態を読み込む．
*
* Return  : なし．
*
*============================================================================*/
void
GJoyInpGetAxis
(
	GJOYINP				hnd,		/* ジョイスティックハンドラ         */
	int					joy_no,		/* ジョイスティックナンバ           */
	int*				lx,			/*-> 左ジョイステッィクのｘ軸の状態   */
	int*				ly,			/*-> 左ジョイステッィクのｙ軸の状態   */
	int*				rx,			/*-> 右ジョイステッィクのｘ軸の状態   */
	int*				ry			/*-> 右ジョイステッィクのｙ軸の状態   */
);

/*=============================================================================
*
* Purpose : 接続されているジョイスティック数を調べる．
*
* Return  : 接続されているジョイスティック数を返す．
*
*============================================================================*/
int
GJoyInpGetCount
(
	GJOYINP				hnd			/* ジョイスティックハンドラ     */
);

/*=============================================================================
*
* Purpose : ジョイスティックのアクセス権の再取得．
*
* Return  : 取得できれば真，取得できなければ偽を返す．
*
*============================================================================*/
BOOL
GJoyInpReacquire
(
	GJOYINP				hnd			/* ジョイスティックハンドラ     */
);

#ifdef __cplusplus
}
#endif

#endif

/********** End of File ******************************************************/
