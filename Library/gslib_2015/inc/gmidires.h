/******************************************************************************
* File Name : gmidires.h                           Ver : 1.00  Date : 98-10-22
*
* Description :
*
*       ＭＩＤＩリソース管理 ヘッダファイル．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef		_GMIDIRES_H_
#define		_GMIDIRES_H_

#include	"gsound.h"

/****** データ型宣言 *********************************************************/

typedef	void*	GMIDIRESOURCE;		/* ＭＩＤＩリソースハンドラ */

/****** 関数プロトタイプ宣言 *************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : ＭＩＤＩリソースの生成．
*
* Return  : ＭＩＤＩリソースハンドラを返す．
*
*============================================================================*/
GMIDIRESOURCE
GMidiResNew
(
	GSOUND			gsnd			/* サウンドハンドラ         */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩリソースの消滅．
*
* Return  : なし．
*
*============================================================================*/
void
GMidiResDelete
(
	GMIDIRESOURCE	hnd				/* ＭＩＤＩリソースハンドラ */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩリソースの初期化．
*
* Return  : なし．
*
*============================================================================*/
void
GMidiResInit
(
	GMIDIRESOURCE	hnd,			/* ＭＩＤＩリソースハンドラ */
	int				n				/* ＭＩＤＩリソース数       */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩリソースをすべて解放．
*
* Return  : なし．
*
*============================================================================*/
void
GMidiResDelAllResource
(
	GMIDIRESOURCE	hnd				/* ＭＩＤＩリソースハンドラ */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩリソースの読み込み．
*
* Return  : 読み込みに成功したら真，失敗したら偽を返す．
*
*============================================================================*/
BOOL
GMidiResLoadResource
(
	GMIDIRESOURCE	hnd,			/* ＭＩＤＩリソースハンドラ */
	int				id,				/* ＭＩＤＩリソースＩＤ     */
	const char*		midi_fname,		/* ＭＩＤＩファイル名       */
	GMIDIFLAG		flag			/* 再生タイプフラグ         */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩリソースの取得．
*
* Return  : 読み込みに成功したら真，失敗したら偽を返す．
*
*============================================================================*/
GMIDI
GMidiResGetResource
(
	GMIDIRESOURCE	hnd,			/* ＭＩＤＩリソースハンドラ */
	int				id				/* ＭＩＤＩリソースＩＤ     */
);

/*=============================================================================
*
* Purpose : ＭＩＤＩリソースの解放．
*
* Return  : なし．
*
*============================================================================*/
void
GMidiResDelResource
(
	GMIDIRESOURCE	hnd,			/* ＭＩＤＩリソースハンドラ */
	int				id				/* ＭＩＤＩリソースＩＤ     */
);

#ifdef __cplusplus
}
#endif

#endif

/********** End of File ******************************************************/
