/******************************************************************************
* File Name : GSrender_target.h                  Ver : 1.00  Date : 2016-03-21
*
* Description :
*
*		レンダーターゲット ヘッダファイル．．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef		_GSRENDER_TARGAT_H_
#define		_GSRENDER_TARGAT_H_

#include	"GStype.h"
#include	"GStexture.h"

/****** 定数宣言 *************************************************************/

#define GS_MRT_MAX				8

/****** データ型宣言 *********************************************************/

/*----- レンダーターゲット構造体 --------------------------------------------*/

typedef	struct
{
	/* 幅							*/
	GSuint		Width;
	/* 高さ							*/
	GSuint		Height;
	/* フレームバッファオブジェクト */
	GLuint		FrameBuffer;
	/* カラーバッファ数				*/
	GLuint		NumColorBuffer;
	/* カラーバッファテスクチャ		*/
	GStexture*	ColorBuffers[GS_MRT_MAX];
	/* デプスバッファテスクチャ		*/
	GStexture*	DepthBuffer;
} GSrendertarget;

/****** 関数プロトタイプ宣言 *************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : レンダーターゲットの生成．
*
* Return  : レンダーターゲットを返す．
*
*============================================================================*/
extern GSrendertarget*
gsRenderTargetNew
(
	GSuint					width,			/* 幅							*/
	GSuint					height,			/* 高さ							*/
	GSuint					numColorBuffer,	/* カラーバッファ数				*/
	const GSpixelFormat		colorBuffer[],	/* カラーバッファフォーマット	*/
	const GSpixelFormat*	depthBuffer,	/* デプスバッファフォーマット	*/
	GLint					filter			/* テクスチャフィルタ			*/

);

/*=============================================================================
*
* Purpose : キューブマップレンダーターゲットの生成．
*
* Return  : キューブマップレンダーターゲットを返す．
*
*============================================================================*/
extern GSrendertarget*
gsRenderTargetCubeNew
(
	GSuint					width,			/* 幅							*/
	GSuint					height,			/* 高さ							*/
	const GSpixelFormat*	colorBuffer,	/* カラーバッファフォーマット	*/
	const GSpixelFormat*	depthBuffer,	/* デプスバッファフォーマット	*/
	GLint					filter			/* テクスチャフィルタ			*/

);

/*=============================================================================
*
* Purpose : レンダーターゲットの消滅．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetDelete
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲットの使用開始．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetBegin
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲットの使用終了．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetEnd
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : キューブマップレンダーターゲットの使用開始．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetCubeBegin
(
	GSrendertarget*			pRenderTarge,	/* レンダーターゲット	  */
	GSuint					faceNo			/* キューブマップの面番号 */
);

/*=============================================================================
*
* Purpose : レンダーターゲット用のカラーバッファテクスチャをバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetBindColorBufferTexture
(
	GSrendertarget*			pRenderTarget,	/* レンダーターゲット	*/
	GSuint					no				/* カラーバッファの番号	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲット用のデプスバッファテクスチャをバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetBindDepthBufferTexture
(
	GSrendertarget*			pRenderTarge	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲット用のカラーバッファテクスチャをアンバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetUnbindColorBufferTexture
(
	GSrendertarget*			pRenderTarget,	/* レンダーターゲット	*/
	GSuint					no				/* カラーバッファの番号	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲット用のデプスバッファテクスチャをアンバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetUnbindDepthBufferTexture
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲットの描画
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetDraw
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲットの描画
*
* Return  : なし．
*
*============================================================================*/
extern void
gsRenderTargetDrawEx
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲットの幅を取得
*
* Return  : レンダーターゲットの幅を返す．
*
*============================================================================*/
extern GSuint
gsRenderTargetGetWidth
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

/*=============================================================================
*
* Purpose : レンダーターゲットの高さを取得
*
* Return  : レンダーターゲットの高さを返す．
*
*============================================================================*/
extern GSuint
gsRenderTargetGetHeight
(
	GSrendertarget*			pRenderTarget	/* レンダーターゲット	*/
);

#ifdef __cplusplus
}
#endif

#endif

/********** End of File ******************************************************/
